{
    "openapi": "3.0.0",
    "info": {
        "title": "crud-test-laravel",
        "description": "Swagger documention for crud-test-laravel",
        "contact": {
            "email": "masood.jooibar@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/customers": {
            "get": {
                "tags": [
                    "customers"
                ],
                "summary": "Get all customers",
                "description": "Get all customers list",
                "operationId": "index",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            }
        },
        "/api/customers/store": {
            "post": {
                "tags": [
                    "customers"
                ],
                "summary": "Add new customer in database",
                "operationId": "store",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/customers/show/{customer}": {
            "get": {
                "tags": [
                    "customers"
                ],
                "summary": "Get single customer",
                "description": "Get single customer",
                "operationId": "show",
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "ID of customer to return",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid status value"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/api/customers/update/{customer}": {
            "patch": {
                "tags": [
                    "customers"
                ],
                "summary": "update existing customer to database",
                "operationId": "update",
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "customer id",
                        "required": true
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomerStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer updated successfully"
                    },
                    "404": {
                        "description": "Item not found"
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/customers/delete/{customer}": {
            "delete": {
                "tags": [
                    "customers"
                ],
                "summary": "Deletes a customer",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "customer",
                        "in": "path",
                        "description": "customer to delete",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Customer deleted successfully"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "customer not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CustomerStoreRequest": {
                "title": "Customer storring request",
                "description": "Some simple request createa as example",
                "properties": {
                    "Firstname": {
                        "title": "Firstname",
                        "description": "Name of customer",
                        "type": "string",
                        "format": "string",
                        "example": "masood"
                    },
                    "Lastname": {
                        "title": "Lastname",
                        "description": "Lastname for customer",
                        "type": "string",
                        "format": "string",
                        "example": "jooibar"
                    },
                    "PhoneNumber": {
                        "title": "PhoneNumber",
                        "description": "PhoneNumber for customer",
                        "type": "string",
                        "format": "string",
                        "example": "09213679259"
                    },
                    "BankAccountNumber": {
                        "title": "BankAccountNumber",
                        "description": "BankAccountNumber for customer",
                        "type": "string",
                        "format": "string",
                        "example": "1362598811235"
                    },
                    "Email": {
                        "title": "Email",
                        "description": "Email for customer",
                        "type": "string",
                        "format": "string",
                        "example": "masood.jooibar@gmail.com"
                    },
                    "DateOfBirth": {
                        "title": "DateOfBirth",
                        "description": "Date of birth for customer",
                        "type": "string",
                        "format": "string",
                        "example": "2023-04-12 11:02:00"
                    }
                },
                "type": "object"
            }
        }
    }
}